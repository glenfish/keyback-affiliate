<script is:inline>
  const API_URL_CLICK = 'https://app.keyback.io/api/tapfiliate/click-id?';
  const API_URL_PRICING = 'https://app.keyback.io/api/coupons/discount-by-ref/';
  var clickID = '';
  var noBTCDiscount = false;
  var newPricing = '';
  var isAffiliate = false;
  var myMap;
  var refResult = '';
  var refValue = '';
  var retail1 = document.getElementById('retail-1');
  var retail2 = document.getElementById('retail-2');
  var price1 = document.getElementById('price-1');
  var price2 = document.getElementById('price-2');
  var discount1 = document.getElementById('percentage-discount-1');
  var discount1b = document.getElementById('percentage-discount-1b');
  var discount2 = document.getElementById('percentage-discount-2');
  var btcDiscountPercentage1 = document.getElementById('btc-percentage-discount-1');
  var btcDiscountPercentage2 = document.getElementById('btc-percentage-discount-2');
  var btcDiscountedDollarAmount = document.getElementById('btc-amount-discount-1');
  var discountedPrice = '997';
  var discountPercentage = '50';
  var discountPercentageRounded = '50';
  var defaultPrice = '1988';
  var discountedAmount = '1491';
  var btcDiscountAmount = '10';
  var btcDiscountedPrice = '897.30';
  var couponStatus = '';

  function setCookie(e, t, o) {
    const n = new Date();
    n.setTime(n.getTime() + 24 * o * 60 * 60 * 1e3);
    let s = 'expires=' + n.toUTCString();
    document.cookie = e + '=' + t + ';' + s + ';path=/' + ';domain=.keyback.io' + ';Samesite=Lax';
  }
  function getCookie(cname) {
    let name = cname + '=';
    let decodedCookie = decodeURIComponent(document.cookie);
    let ca = decodedCookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
  function getPricingFromCookies() {
    defaultPrice = getCookie('default_price');
    discountedAmount = getCookie('discount_amount');
    discountedPrice = getCookie('discounted_price');
    discountPercentage = getCookie('discount_percentage');
    btcDiscountAmount = getCookie('btc_discount_amount');
    btcDiscountedPrice = getCookie('btc_discounted_price');
    if (!discountedPrice || discountedPrice == '' || !discountPercentage || discountPercentage == '') {
      console.log('some pricing data missing');
      deleteCookie('default_price');
      deleteCookie('discount_amount');
      deleteCookie('discounted_price');
      deleteCookie('discount_percentage');
      deleteCookie('btc_discount_amount');
      deleteCookie('btc_discounted_price');
    }
    retail1.textContent = defaultPrice;
    retail2.textContent = defaultPrice;
    price1.textContent = discountedPrice;
    price2.textContent = discountedPrice;
    discountPercentageRounded = Math.round(discountPercentage);
    discount1.textContent = discountPercentageRounded;
    discount1b.textContent = discountPercentageRounded;
    discount2.textContent = discountPercentageRounded;
    btcDiscountPercentage1.textContent = Math.round(btcDiscountAmount);
    btcDiscountPercentage2.textContent = Math.round(btcDiscountAmount);
    btcDiscountedDollarAmount.textContent = Math.round(btcDiscountedPrice);
    if (Math.round(btcDiscountAmount) == 0) {
      noBTCDiscount = true;
      updateBTCDiscountNone();
    } else {
      updateBTCDiscount();
    }
  }
  function deleteCookie(cookieName) {
    document.cookie =
      cookieName + '=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/' + ';domain=.keyback.io' + ';Samesite=Lax';
  }
  function updateBTCDiscountNone() {
    document.getElementById('bitcoin-discount-inactive').classList.remove('hidden');
    document.getElementById('bitcoin-discount-inactive-2').classList.remove('hidden');
  }
  function updateBTCDiscount() {
    document.getElementById('bitcoin-discount-active').classList.remove('hidden');
    document.getElementById('bitcoin-discount-active-2').classList.remove('hidden');
  }
  function convert(json) {
    myMap = new Map(Object.entries(JSON.parse(json)));
    return myMap;
  }

  function getClickID(params) {
    fetch(API_URL_CLICK + params, {
      method: 'GET',
      mode: 'cors',
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': 'https://specials.keyback.io',
      },
    })
      .then((response) => response.json())
      .then((data) => {
        clickID = data.data.id;
        setCookie('click_id', clickID, 90);
        // console.log('CLICK ID: ' + data.data.id)
      })

      // .then(data => console.log(data))
      // .then(data => convert(data))
      .catch(() => null);
  }

  function getPricing(params) {
    fetch(API_URL_PRICING + params, {
      method: 'GET',
      mode: 'cors',
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': 'https://specials.keyback.io',
      },
    })
      .then((response) => response.json())
      .then((data) => {
        // console.log('price: ' + data.data.discounted_price);
        couponStatus = data.message;
        // console.log('status: ' + couponStatus);
        if (couponStatus == 'active') {
          discountedPrice = data.data.discounted_price;
          discountPercentage = data.data.discount_percentage;
          discountPercentageRounded = Math.round(discountPercentage);
          defaultPrice = data.data.default_price;
          discountedAmount = data.data.discount_amount;
          if (data.data.btc_discount_amount != '0' || data.data.btc_discount_amount != null) {
            btcDiscountAmount = data.data.btc_discount_amount;
          }

          btcDiscountedPrice = data.data.btc_discounted_price;
        }
        retail1.textContent = defaultPrice;
        retail2.textContent = defaultPrice;
        price1.textContent = discountedPrice;
        price2.textContent = discountedPrice;
        discount1.textContent = discountPercentageRounded;
        discount1b.textContent = discountPercentageRounded;
        discount2.textContent = discountPercentageRounded;
        btcDiscountPercentage1.textContent = Math.round(btcDiscountAmount);
        btcDiscountPercentage2.textContent = Math.round(btcDiscountAmount);
        btcDiscountedDollarAmount.textContent = Math.round(btcDiscountedPrice);
        if (Math.round(btcDiscountAmount) == 0) {
          noBTCDiscount = true;
          updateBTCDiscountNone();
        } else {
          updateBTCDiscount();
        }
        setCookie('default_price', defaultPrice, 90);
        setCookie('discount_amount', discountedAmount, 90);
        setCookie('discount_percentage', discountPercentage, 90);
        setCookie('discounted_price', discountedPrice, 90);
        setCookie('btc_discount_amount', btcDiscountAmount, 90);
        setCookie('btc_discounted_price', btcDiscountedPrice, 90);
      })

      // .then(data => console.log(data))
      // .then(data => convert(data))
      .catch((error) => console.error(error));
  }

  let urlParams = '';
  const landingPage = window.location.href;

  document.addEventListener('DOMContentLoaded', () => {
    const e = new URLSearchParams(window.location.search),
      t = Array.from(e.keys()).reduce(
        (t, o) => ({
          ...t,
          [o]: e.get(o),
        }),
        {}
      );
    // console.log(t);

    const referringURL = window.location.href;
    if (referringURL.includes('specials.keyback.io/go/')) {
      refResult = referringURL.replace('https://specials.keyback.io/go/', '');
      // console.log('Go Referrer: ' + refResult);
    }
    if (referringURL.includes('specials.keyback.io/pro/')) {
      refResult = referringURL.replace('https://specials.keyback.io/pro/', '');
      // console.log('Pro Referrer: ' + refResult);
    }
    if (refResult != '') {
      urlParams += 'referral_code=' + refResult + '&';
      setCookie('ref', refResult, 90);
      isAffiliate = true;
    }

    urlParams += 'referrer=' + encodeURIComponent(document.referrer) + '&';
    urlParams += 'landing_page=' + encodeURIComponent(landingPage);
    refValue = getCookie('ref');
    if (isAffiliate) {
      getClickID(urlParams);
      getPricing(refResult);
    } else if (refValue != '') {
      // console.log('getting values from cookies');
      getPricingFromCookies();
    } else {
      updateBTCDiscount();
    }
  });
</script>
